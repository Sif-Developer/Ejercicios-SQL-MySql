todo // Si instalas la extensión BETTER COMMENTS se hará MUCHO más sencillo de leer :). 
todo // Ni caso a "todo" solo sirve para pintar en naranja.

* 1.1. Crea una base de datos

? A continuación, crearás una base de datos. El objetivo de este proyecto es aprender
? a trabajar en una base de datos y hacer consultas SQL.

* 1.1.1 Crea una base de datos

? Crea una base de datos que se llame my_company_database.
? La base de datos deberá contener la siguiente tabla:
? employees. A su vez tendrá los siguientes campos:   
? id
? birth_date  
? first_name
? last_name   
? gender     

CREATE DATABASE my_company_database;

use my_company_database;
CREATE TABLE employees (
id int,
birth_date varchar(200),
first_name varchar(200),
last_name varchar(200),
gender varchar(200),
PRIMARY KEY(id)
);

* 1.1.2 Añade columnas nuevas a la tabla creada
? Añade 3 columnas nuevas a la tabla:
? Columna "salary"
? Columna "title"
? Columna "title_date"(fecha)


ALTER TABLE employees ADD salary DECIMAL(15,2); 
ALTER TABLE employees ADD title VARCHAR(200);
ALTER TABLE employees ADD title_date VARCHAR(200);

todo // Esto es para que las columnas puedan crear ids en orden número solas.
ALTER TABLE employees MODIFY COLUMN id int auto_increment;





*1.2. Ejecute las siguientes consultas SQL

? A continuación, deberá realizar las siguientes consultas SQL:

* 1.2.1 INSERTAR DATOS

? Inserte al menos 15 nuevos empleados:
? Al menos 3 empleados deben tener el mismo nombre.
? Los salarios de los empleados deben oscilar en un rango de
? 5000 y 50.000 y deben variar entre diferentes géneros.
? Todos los empleados tienen un título.
? Al menos 5 títulos son de 2020

INSERT INTO employees (birth_date, first_name, last_name, gender, salary, title, title_date) VALUES ('2003','Lorena', 'Puerro', 'female', '21000', 'developer', '2003');
INSERT INTO employees (birth_date, first_name, last_name, gender, salary, title, title_date) VALUES ('2003','Claudia', 'Sierra', 'female', '15000', 'designer', '2020');
INSERT INTO employees (birth_date, first_name, last_name, gender, salary, title, title_date) VALUES ('2003','Pablo', 'Casado', 'male', '20000', 'engineer', '2017');
INSERT INTO employees (birth_date, first_name, last_name, gender, salary, title, title_date) VALUES ('1945','Eustaquio', 'Abichuela', 'male','10000', 'designer', '2002');
INSERT INTO employees (birth_date, first_name, last_name, gender, salary, title, title_date) VALUES ('2003','Juan', 'Pino', 'male', '10000', 'engineer', '2020');
INSERT INTO employees (birth_date, first_name, last_name, gender, salary, title, title_date) VALUES ('1989','Ana', 'Casado', 'female', '20000', 'tester', '2007');
INSERT INTO employees (birth_date, first_name, last_name, gender, salary, title, title_date) VALUES ('2000','Pablo', 'Pinilla', 'male', '25000', 'developer', '2005');
INSERT INTO employees (birth_date, first_name, last_name, gender, salary, title, title_date) VALUES ('2003','Andrea', 'Pascual', 'female', '20000', 'developer', '2020');
INSERT INTO employees (birth_date, first_name, last_name, gender, salary, title, title_date) VALUES ('2003','Juan', 'Labrado', 'male', '5000', 'designer', '2020');
INSERT INTO employees (birth_date, first_name, last_name, gender, salary, title, title_date) VALUES ('1991','Sergio', 'Condenado', 'male', '10000', 'driver', '2022');
INSERT INTO employees (birth_date, first_name, last_name, gender, salary, title, title_date) VALUES ('2003','Maria', '', 'female', '35000', 'tester', '2015');
INSERT INTO employees (birth_date, first_name, last_name, gender, salary, title, title_date) VALUES ('1978','Mari', 'Pili', 'female', '50000', 'developer', '2012');
INSERT INTO employees (birth_date, first_name, last_name, gender, salary, title, title_date) VALUES ('1996','Juan', 'Perroviejo', 'male','10000', 'marketing', '2021');
INSERT INTO employees (birth_date, first_name, last_name, gender, salary, title, title_date) VALUES ('1978','Churumbel', 'Pum', 'male', '10000', 'marketing', '2020');
INSERT INTO employees (birth_date, first_name, last_name, gender, salary, title, title_date) VALUES ('1992','Niki', 'Pipo', 'female', '24000', 'marketing', '2015');



* 1.2.2 ACTUALIZAR DATOS

* Actualizar a los empleados:
! Si lo hacemos desde la terminal seguid el enunciado tal cual,
! si lo estáis haciendo con workbench actualizadlo por 
! (primary_key)es decir el valor único y en este caso será el id.
? Cambiar el nombre de un empleado. Para ello, genere una consulta que afecte 
? solo a un determinado empleado en función de su nombre,
? apellido y fecha de nacimiento.

todo // Sería así:
UPDATE employees SET first_name = 'Antonio' WHERE title_date = 2022;
todo // Cambia la row 10, Antonio en vez de Sergio.

todo // Podría cambiar la columna que quiera diciéndole al ordenador el nombre 
todo // de la columna después del where o añadir más requisitos, filtrando más. 

todo // En mi workbench lo cambio en función del ID porque está en safe mode, así:
UPDATE employees SET first_name = 'Antonio' WHERE id = 10;
todo // Pero supongo que es lo mismo. 

* 1.2.3 OBTENER DATOS

? ⦁ Seleccione todos los empleados con un salario superior a 20.000
SELECT * FROM employees WHERE salary > 20000;

? ⦁ Seleccione todos los empleados con un salario inferior a 10.000
SELECT * FROM employees WHERE salary < 10000;

?⦁ Seleccione todos los empleados que tengan un salario entre 14.000 y 50.000
SELECT * FROM employees WHERE salary BETWEEN 14000 AND 50000;

?⦁ Seleccione el número total de empleados
SELECT COUNT(first_name) FROM employees;

?⦁ Selecciona los títulos del año 2019
SELECT title FROM employees;

?⦁ Seleccione solo el nombre de los empleados en mayúsculas
SELECT UPPER(first_name) FROM employees;

?⦁ Seleccionar el nombre de los empleados sin que se repita ninguno
SELECT DISTINCT first_name FROM employees;


*1.2.4 BORRAR DATOS

? ⦁ Elimina el empleado con id = 5
! Si lo hacemos desde la terminal seguid el enunciado tal cual,
! si lo estáis haciendo con workbench actualizadlo por (primary_key)
! es decir el valor único y en este caso será el id.

DELETE FROM employees WHERE id = 5;

? Eliminar a todos los empleados con un salario superior a 20.000

SET SQL_SAFE_UPDATES = 0;
DELETE FROM employees WHERE salary > 20000;
SET SQL_SAFE_UPDATES = 1;

todo // Como estaba en safe mode no me dejaba hacer deletes, me saltaba error.

todo // Entonces gracias a  SET SQL_SAFE_UPDATES = 0; desactivé el safe mode
todo // y ya podía manipular el workbench sin las restricciones del modo seguro.
todo // Cuando se haya ejecutado la orden del ejercicio DELETE FROM employees WHERE salary > 20000;,
todo // volverá a activarse el safe mode con SET SQL_SAFE_UPDATES = 1;. 


